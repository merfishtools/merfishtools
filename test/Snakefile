configfile: "config.yaml"


merfishtools = "../target/release/merfishtools"


plot_ext = ["svg", "pdf"]


rule all:
    input:
        "diffexp/140genesData.A-vs-B.txt",
        expand("results/foldchange_cdf/140genesData.A-vs-B.{gene}.{ext}", ext=plot_ext, gene=config["genes"]),
        expand("results/expression_pmf/140genesData.{gene}.X.{ext}", ext=plot_ext, gene=config["genes"]),
        "results/pca/140genesData.pca.pdf"


rule plots:
    input:
        expand("results/expression_pmf/140genesData/{gene}.svg", gene="AFAP1 COL5A1".split())


rule sort:
    input:
        "data/140genesData.csv.bz2"
    output:
        "data/140genesData.sorted.txt"
    shell:
        r"bzcat {input} | xsv sort -d '\t' | xsv fmt -t '\t' > {output}"


rule expressions:
    input:
        "data/{dataset}.sorted.txt"
    output:
        pmf="expressions/{dataset}.{group}.txt",
        est="expressions/{dataset}.{group}.est.txt",
    params:
        expmnts=lambda wildcards: config["groups"][wildcards.group]["expmnts"],
        cells=lambda wildcards: config["groups"][wildcards.group]["cells"]
    threads: 8
    shell:
        "{merfishtools} exp --estimate {output.est} -t {threads} "
        "--expmnts '{params.expmnts}' --cells '{params.cells}' < {input} "
        "> {output.pmf}"


rule diffexp:
    input:
        "expressions/{dataset}.{group1}.txt",
        "expressions/{dataset}.{group2}.txt"
    output:
        pmf="diffexp/{dataset}.{group1}-vs-{group2}.txt",
        est="diffexp/{dataset}.{group1}-vs-{group2}.est.txt"
    benchmark:
        "bench/diffexp/{dataset}.{group1}-vs-{group2}.txt"
    threads: 8
    shell:
        "{merfishtools} diffexp -t {threads} --pmf {output.pmf} {input} "
        "> {output.est}"


rule plot_expression_pmf:
    input:
        expr="expressions/{dataset}.{group}.txt",
        raw="data/{dataset}.sorted.txt"
    output:
        "results/expression_pmf/{dataset}.{gene}.{group}.svg"
    script:
        "scripts/expression_pmf.py"


rule plot_foldchange_cdf:
    input:
        pmf="diffexp/{dataset}.{group1}-vs-{group2}.txt",
        est="diffexp/{dataset}.{group1}-vs-{group2}.est.txt"
    output:
        "results/foldchange_cdf/{dataset}.{group1}-vs-{group2}.{gene}.svg"
    script:
        "scripts/foldchange_cdf.py"


rule sparse_pca:
    input:
        est="expressions/{dataset}.all.est.txt"
    output:
        "results/pca/{dataset}.pca.svg"
    script:
        "scripts/sparse_pca.py"



rule svg2pdf:
    input:
        "{prefix}.svg"
    output:
        "{prefix}.pdf"
    shell:
        "rsvg-convert -f pdf {input} > {output}"
